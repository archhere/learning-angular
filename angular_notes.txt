MODULE:

Module contains different components of an angular app.

ng-app is called a directive.It tells Angular JS that myApp module
will live within the <body> element, termed the application's scope.
In other words, ng-app directive is used to define application scope.
 Expressions are used to display values on the page.
 The value of title showed up when we viewed the app in the browser.


Big Picture:
Views - Represent webpage as we show the user  Directives - A special angular feature that drive Html and teach html new tricks and Filters - filter or format data
Controllers - What is controller. How can you bind data in a controller to a view using something
called a scope and how we can place controllers into containers called modules  ,
scope, module
Routing - This is a very important feature of Angular JS.A special piece of framework called Route Provider that
we can use to provide routes that the user might want to navigate to. For eg: when they click
a button, they might go to a specific route or when they click a hyperlink
they might go to another route.

Services and Factories: These are used to keep code DRY. They are Singleton objects (OBJECTS THAT ARE CREATED ONCE IN MEMORY). We can use them for things like business rules, AJAX requests etc(similar to how we use Util in React)

Animation: css transitions and animations how how to use them with Angular directives.

SPA Overview (Single Page Applications)
Angular JS
Key players in Angular JS
Angular JS Documentation


SPA Overview:
SPA allow different views to be loaded into a shell page as the user interacts with the page.
views can be replaced with other Views
A standard app requires the entire page to be loaded, but SPA allows the specific <div> to be reloaded.
This makes it fast, fluid and responsive.
SPAs maintain a history, so we have access to previous views.


Technologies:

DOM Manipulation
Manage history
Routing
AJAX
Data Binding

Angular architecture

Angular:
A platform
A framework
Cross Platform - will work on mobile or desktop
SPA
MEAN stack

Angular is not
a) a library
b) plugin
c) Extention
d) Package

Typescript:  (Created and maintained by microsoft)
a) A superset of Javascript
b) Includes optional static typing
c) compiles to JS

namespace is called 'ng'  'ngfor', 'ngif' etc.

Angular architecture has the following:
Modules : Modules are the basic fundamental of angular.Angular has a modular
system.
Components :  Everything we create is a component. We have to seperate each and Everything
in a new component.
Template: Every component has a template.How the component looks and its features are decided by
the template.
Metadata: Data for other data.

Ng module comes from Angular core. You can find this in Node Modules.
Databinding: We are using javascript framework. So we have to modify DOM,template
as per our requirement. We use databinding to preserve scope of object/instance as needed.
Data we bind to any tag or something.
Ng modules: Modules are just a collection of similar kind of functions in a set.
1) Every angular app must have atleast one module called App Module.
2) Class with @NgModule decorator. Decorators are functions that modify javascript classes.
Classes of javascript can be modified and enhanced by decorators.

Components:
Components are class that interacts with view (basically DOM).
There are many life cycle hooks like 'ngOnInit' etc..

cli stands for command line interface
Terminal:
Make sure you have node module.
npm install -g @angular/cli
 This was just cli. Now lets install angular project
ng new angular5

The main thing is src folder.Inside this, important thing is app folder.


Similar to how we have an entry file in our bundle in React, in angular, we bootstrap the first file.
app.module.ts

bootstrap: [AppComponent]


ngOnInit() {
console.log('hello')
}

This is similar to ComponentDidMount()

ng serve -o     (to open file in browser)


export class AppComponent {
title ="MyApp";
message(value) {
console.log(value)
}

ngOnInit(){
 this.message(this.title)
 }
}


Component decorator has 3 types of metadata:
@component({
  selector: 'appname',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})


Decorators are functions that modify javascript classes. For eg,
here, based selector appname is caught and rendered in index.html


Lets generate a new component
ng g component Marvelheros

When you do this, a new folder is created in app folder and it has similar info to app.component
that was there before
The only thing it doesnt have is app.module, which is understandable as there can be only 1 app.module.
If you open app module, you will find marvelheros already imported and also added to the declarations.
(In react, all of this was done by bundle.js)

Data binding is just interaction between component and template.
